Лабораторна робота 1
Наведіть означення алгоритму.
Що таке комп'ютерна програма? Що таке реалізація алгоритму?
У чому полягає аналіз алгоритму?
Що таке елементарна операція? Наведіть кілька прикладів.
Що таке час виконання програми?
Що означає фраза: час виконання програми сталий/логарифмічний/лінійний/поліноміальний/експонеційний?
Наведіть означення таких понять як найкращий/найгірший час виконання програми. Що таке час виконання програми в середньому.
Наведіть означення O-оцінки: що означає f=O(g)?
Наведіть означення Омега-оцінки: що означає f=Омега(g)?
Наведіть означення Тета-оцінки: що означає f=Тета(g)?
Наведіть основні правила визначення асимптотичної поведінки часу виконання.

==============================================
Лабораторна робота 4
У чому полягає концепція бінарного пошуку по відповіді?

Лабораторна робота 5
Що таке хешування?
Наведіть приклад хеш-функції.
Наведіть основні характеристики, яким має задовольняти хеш-функція
Що таке колізія хеш-функції?
Яка хеш-функція називається ідеальною?
Що таке асоціативний масив?
Яка структура даних називається хеш-таблицею? Які основні операції вона має підтримувати?
У чому полягає процес розв'язання колізій?
Які види хеш-таблиць бувають? Які відмінності між ними?



ООП
Приклад 4.2.  ===================================
Опшиемо клас ProtectedDictInt, що є словником, у якому ключами можуть бути лише цілі числа та заборонена операція зміни значення за ключем (крім випадку додавання нової пари ключ-значення). Оформимо цей клас як обгортку навколо вбудованого типу даних dict. 
Для обробки заборонених ситуацій створимо клас виключення, що
    є нащадком класу KeyError;
	ініціюється, якщо здійснюється спроба використання ключа, що не є цілим числом;
	ініціюється якщо відбувається спроба змінити у словнику значення за заданим ключем;
	генерує різні повідомлення у кожній із заборонених ситуацій.
	
Спочатку опишемо клас виключення, який назвемо ProtectedDictIntError.

№№№№№№№№№№№№
№№№№№№№№№

Як бачимо цей клас місить три сталих (статичних поля), для ідентифікації типу (за кодом) помилки. Вхідними параметрами конструктора буде код помилки та повідомлення, що містить інформацію про помилку. Тепер опишемо клас ProtectedDictInt, у якому перевантажимо оператор [] для доступу до даних словника по ключу для читання та запису.



Для демонстрації ще одного прикладу застосування інтерфейсів, реалізуємо важливий шаблон об'єкно-орієнтваного проектування - Спостерігач (Observer).

Цей шаблон реалізує механізм, який дозволяє об'єктам одного класу отримувати сповіщення про зміну стану об'єктів інших класів і тим самим спостерігати за ними. 

Клас, за яким спостерігають називаються Суб'єктот (Subject), а клас який спостерігає - Спостерігачем (Observer).
Для отримання повідомлень Спостерігач має підписатися (зареєструватися) на зміну стану Суб'єкта.

При реалізації шаблону Спостерігач зазвичай використовуються такі класи:
Subject - абстрактний клас або інтерфейс, який визначає методи для додавання, видалення та сповіщення спостерігачів;
Observer - інтерфейс, за допомогою якого спостерігач отримує сповіщення;
ConcreteSubject, ConcreteObserver  - конкретні реалізації вищенаведених класів.

Приклад 5.2.
Реалізуємо шаблон Спостерігач у такому вигляді - об'єкти класу FileReader читають текстові файли та передають кожен прочитай рядок файлу усім підписаним спостерігачам.
Абстрактний клас Subject визначає методи для додавання та сповіщення спостерігачів.

Інтерфейс Observer декларує єдиний абстрактний метод onDataReceive(self, line), реалізація якого здійснюється у конкретних спостерігачах FilePrinter та WordCounter - перший з яких виводить усі отримані від суб'єкту рядки файлу на екран, другий підраховує кількість слів у текстовому файлі.

